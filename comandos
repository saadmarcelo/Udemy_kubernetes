kubectl get node ( lista os nodes do cluster)
kubectl get node -owide 
kubectl get pod ( lista os pods do namespace)
kubectl get pod -A ( lista os pods de todos os namespaces)
kubectl get pod -Aowide ( lista mais informações dos pods)
kubectl get pod -v9 ( lista os pods com o modo verbose)
kubectl get pod -n kube-system etcd-master -oyaml (exporta o yaml com o describe do pod etcd-master)


necessario instalar o etcdctl no master
apt install etcdctl-client

entrar na pasta
/etc/kubernetes/pki/etcd/ (local onde estarao as chaves e certificados do cluster)



etcdctl member list --cacert $(pwd)/ca.crt --cert $(pwd)/server.crt --key server.key--write-out table
comando para listar os membros do cluster

scritp etcdctl.env

cat <<EOF > etcdctl.env
export ETCDCTL_CACERT=/etc/kubernetes/pki/etcd/ca.crt
export ETCDCTL_CERT=/etc/kubernetes/pki/etcd/server.crt
export ETCDCTL_KEY=/etc/kubernetes/pki/etcd/server.key
export ETCDCTL_API=3
EOF

backup etcd ( normalmente fica na pasta /var/lib/etcd/)
etcdctl snapshot save backup.db (faz o backup no arquivo backup.db)
etcdctl snapshot restore backup.db (restaura o backup)

#modulo_02 YAML

kubectl apply -f modulo_02/pod.yaml
kubectl api-resources ( lista todos recursos do cluester)

kubectl get pods nginx -o yaml (para gerar o arquivo yaml do pod q ja esta rodando)

install krew

https://krew.sigs.k8s.io/docs/user-guide/quickstart/

kubectl krew install neat (plugin neat para )

kubectl get pods nginx -o yaml | kubectl neat ( cria um arquivo yaml com as informacoes basicas para rodar o pod)

##### modulo 03 ######

kubectl get namespaces ( mostra as namespaces atualmente no cluster)

kubectl get pod --namespace kube-flannel ( lista os pods no namespace kube-flannel)

kubectl create namespace devops (cria o namespace devops)

kubectl delete namespace devops ( deleta o namespace devops)

kubectl create namespace devops --dry-run -oyaml | kubectl neat > /tmp/namespace.yaml( roda o comando de criar o namespace mas gera o arquivo yaml e manda como entrada no pugin do neat para limpar os dados do yaml e salva no arquivo /tmp/namespace.yaml)

##### modulo 04 ########

kubectl run --image alpine --rm -it nomepod sh (cria um container com a imagem do alpine , que sera removido assim q sair do console)

kubectl run --image hashicorp/terraform:latest terraform-demo --dry-run -oyaml (gerando um yaml do pod do terraform)

kubectl run --image hashicorp/terraform:latest terraform-demo --dry-run -oyaml | kubectl neat (gera o yaml sem os conteudos nao desejados)

kubectl exec -it terraform-demo -- sh ( para conectar no pod terraform-demo )

kubectl run --image busybox:1.28 --rm -it busybox-demo sh ( cria um pod com a imgem busybox vem com algumas ferramentas instaladas)

kubectl run --image httpd multicontianer-pod --dry-run -oyaml | kubectl neat > modulo_04/pod-multicontainer.yaml ( cria um yaml para o pod-multconainer )

kubectl apply -f modulo_04/pod-multicontainer.yaml ( criar o pod-multicontainer com 2 containers httpd e debug)

 kubectl logs multicontianer-pod (vai mostrar os logs do container httpd q ele definou como default)

kubectl logs multicontianer-pod -c debug ( para vericar o log do do container debug )

kubectl exec multicontianer-pod -- ls (executa uma comando no pod multicontianer-pod)

kubectl exec multicontianer-pod -c debug -- ls ( executa um comando no pod debug)

######## procedimentos para conectar no pod sem usar o kubectl exec 

kubectl get pods -owide  ( lista os pods e mostra mais informacoes em qual node o container esta rodando)

  # conecta no node onde o container esta rodando 

crictl ps ( lista os container rodando no node)

crictl inspect e7b | jq (inspeciona o json com container e manda para o jq para fica colorido a saida e facilitar a leitura )

crictl inspect e7b 2> /dev/null | jq '.info.pid' ( mesma opcao anterior , jogando as mens de erro no /dev/null e filtrando o campo info.pid)

# com  informacao do pid podemos da o comando ps

ps aux | grep 70941  ( mostra os processo com o pid 70941)

nsenter -t 70941 -n ls / ( usando o comando nsenter para radar um comando no namespace com o pid 70941 )

nsenter -t 70941 -n curl 10.244.2.7 (rodando o comando curl no ip do container para ter a resposta do apache)






